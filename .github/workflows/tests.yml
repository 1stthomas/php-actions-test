name: Continuous Integration
on: [push, pull_request]
jobs:
#  tests-on-php-latest:
#    strategy:
#      matrix:
#        operating-system: [ubuntu-latest, windows-latest, macos-latest]
#    runs-on: ${{ matrix.operating-system }}
#    name: Tests - PHP 8.0 on ${{ matrix.operating-system }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
#        with:
#          php-version: '8.0'
#
#      - name: Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache composer dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          # Use composer.json for key, if composer.lock is not committed.
#          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-composer-
#
#      - name: Install dependencies
#        run: composer install --no-progress --prefer-dist --optimize-autoloader
#
#      - name: Unit tests
#        run: composer test-unit
#
#      - name: Integration tests
#        run: composer test-int
#
#  tests-on-older-php:
#    strategy:
#      matrix:
#        php-versions: ['7.2', '7.3', '7.4']
#    runs-on: ubuntu-latest
#    name: Tests - PHP ${{ matrix.php-versions }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
#        with:
#          php-version: ${{ matrix.php-versions }}
#
#      - name: Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache composer dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          # Use composer.json for key, if composer.lock is not committed.
#          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-composer-
#
#      - name: Install dependencies
#        run: composer install --no-progress --prefer-dist --optimize-autoloader
#
#      - name: Unit tests
#        run: composer test-unit
#
#      - name: Integration tests
#        run: composer test-int

  echo-path:
    name: Echo path
    runs-on: ubuntu-latest
    env:
      PHP_LINT_CONFIG: /tests/.phplint.yml
#      PHP_LINT_CONFIG: $GITHUB_WORKSPACE/tests/.phplint.yml
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: Temporary echoing
        id: working-dir-1
        run: echo "path:$GITHUB_WORKSPACE$${{ env.PHP_LINT_CONFIG }}"

      - name: Temporary echoing
        id: working-dir-2
        run: echo "path:GITHUB_WORKSPACE$${{ env.PHP_LINT_CONFIG }}"

      - name: Temporary echoing
        id: working-dir-3
        run: echo "path:$GITHUB_WORKSPACE${{ env.PHP_LINT_CONFIG }}"

      - name: Temporary echoing
        id: working-dir-4
        run: echo "{PHP_LINT_CONFIG2}={$GITHUB_WORKSPACE${{ env.PHP_LINT_CONFIG }}" >> $GITHUB_ENV
#        run: echo "::set-env name=PHP_LINT_CONFIG2::${GITHUB_WORKSPACE}${{ env.PHP_LINT_CONFIG }}"

      - name: Temporary echoing
        id: working-dir-5
        run: echo "path:${{ env.PHP_LINT_CONFIG2 }}"

      - name: Temporary echoing
        id: working-dir-6
        run: echo "$GITHUB_WORKSPACE${{ env.PHP_LINT_CONFIG }}"

#      - name: Temporary echoing
#        id: working-dir-4
#        run: echo "path:$${{ $GITHUB_WORKSPACE + env.PHP_LINT_CONFIG }}"
#        run: echo "path: $${{ env.PHP_LINT_CONFIG }}"

  check-syntax-errors:
    name: Check PHP syntax errors
    runs-on: ubuntu-latest
    env:
      PHP_LINT_CONFIG: /tests/.phplint.yml
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: PHP Lint
        uses: overtrue/phplint@8.0
        with:
          options: --configuration=$GITHUB_WORKSPACE${{ env.PHP_LINT_CONFIG }}
#          options: --configuration=./tests/.phplint.yml
#          options: --configuration=$GITHUB_WORKSPACE/tests/.phplint.yml

#  code-coverage:
#    name: Code coverage
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '7.4'
#
#      - name: Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache composer dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          # Use composer.json for key, if composer.lock is not committed.
#          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-composer-
#
#      - name: Install dependencies
#        run: composer install --no-progress --prefer-dist --optimize-autoloader
#
#      - name: Run Tests with Code Coverage
#        run: vendor/bin/phpunit  --colors --testdox --configuration tests/configuration.xml --testsuite unit --coverage-clover=coverage.clover
#
#      - uses: codecov/codecov-action@v2
#        with:
#          files: coverage.clover
#          fail_ci_if_error: true
#          verbose: true
#
#  coding-style:
#    name: Coding Style
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.0'
#
#      - name: Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache composer dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          # Use composer.json for key, if composer.lock is not committed.
#          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-composer-
#
#      - name: Require cs fixer
#        run: composer require friendsofphp/php-cs-fixer
#
#      - name: Install dependencies
#        run: composer install --no-progress --prefer-dist --optimize-autoloader
#
#      - name: Run PHP-CS-Fixer
#        run: vendor/bin/php-cs-fixer fix src/ --verbose --diff --dry-run
#
#  static-analysis:
#    name: Static Analysis
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: php-actions/composer@v2
#      - uses: php-actions/phpstan@v2
#        # src: https://github.com/marketplace/actions/phpstan-php-actions
#        with:
#          path: src/
